// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using WpfGestionBoutiqueFlorale;

#nullable disable

namespace WpfGestionBoutiqueFlorale.Migrations
{
    [DbContext(typeof(GestionFloraleDbContext))]
    [Migration("20250419063519_GestionDb")]
    partial class GestionDb
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("WpfGestionBoutiqueFlorale.Models.Bouquet", b =>
                {
                    b.Property<int>("IdBouquet")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdBouquet"));

                    b.Property<string>("CartePersonnalise")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("EstSelectionnee")
                        .HasColumnType("bit");

                    b.Property<int?>("IdCommande")
                        .HasColumnType("int");

                    b.Property<string>("NomBouquet")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdBouquet");

                    b.HasIndex("IdCommande");

                    b.ToTable("Bouquets");
                });

            modelBuilder.Entity("WpfGestionBoutiqueFlorale.Models.Commande", b =>
                {
                    b.Property<int>("IdCommande")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdCommande"));

                    b.Property<bool>("EstValidee")
                        .HasColumnType("bit");

                    b.Property<int?>("FactureIdFacture")
                        .HasColumnType("int");

                    b.Property<int?>("IdFacture")
                        .HasColumnType("int");

                    b.Property<int?>("IdUtilisateur")
                        .HasColumnType("int");

                    b.Property<double>("MontantTotal")
                        .HasColumnType("float");

                    b.Property<int?>("UtilisateurIdUtilisateur")
                        .HasColumnType("int");

                    b.HasKey("IdCommande");

                    b.HasIndex("FactureIdFacture");

                    b.HasIndex("UtilisateurIdUtilisateur");

                    b.ToTable("Commandes");
                });

            modelBuilder.Entity("WpfGestionBoutiqueFlorale.Models.Facture", b =>
                {
                    b.Property<int>("IdFacture")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdFacture"));

                    b.Property<string>("ModePaiement")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdFacture");

                    b.ToTable("Factures");
                });

            modelBuilder.Entity("WpfGestionBoutiqueFlorale.Models.Fleur", b =>
                {
                    b.Property<int>("IdFleur")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdFleur"));

                    b.Property<int?>("BouquetIdBouquet")
                        .HasColumnType("int");

                    b.Property<string>("CouleurDominante")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("EstSelectionnee")
                        .HasColumnType("bit");

                    b.Property<int?>("IdBouquet")
                        .HasColumnType("int");

                    b.Property<int?>("IdCommande")
                        .HasColumnType("int");

                    b.Property<string>("Nom")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("PrixUnitaire")
                        .HasColumnType("float");

                    b.HasKey("IdFleur");

                    b.HasIndex("BouquetIdBouquet");

                    b.HasIndex("IdCommande");

                    b.ToTable("Fleurs");
                });

            modelBuilder.Entity("WpfGestionBoutiqueFlorale.Models.Utilisateur", b =>
                {
                    b.Property<int>("IdUtilisateur")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdUtilisateur"));

                    b.Property<string>("email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("firstname")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("lastname")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("phone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("role")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("username")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdUtilisateur");

                    b.ToTable("Utilisateurs");
                });

            modelBuilder.Entity("WpfGestionBoutiqueFlorale.Models.Bouquet", b =>
                {
                    b.HasOne("WpfGestionBoutiqueFlorale.Models.Commande", "Commande")
                        .WithMany("Bouquets")
                        .HasForeignKey("IdCommande")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.Navigation("Commande");
                });

            modelBuilder.Entity("WpfGestionBoutiqueFlorale.Models.Commande", b =>
                {
                    b.HasOne("WpfGestionBoutiqueFlorale.Models.Facture", "Facture")
                        .WithMany()
                        .HasForeignKey("FactureIdFacture");

                    b.HasOne("WpfGestionBoutiqueFlorale.Models.Utilisateur", "Utilisateur")
                        .WithMany()
                        .HasForeignKey("UtilisateurIdUtilisateur");

                    b.Navigation("Facture");

                    b.Navigation("Utilisateur");
                });

            modelBuilder.Entity("WpfGestionBoutiqueFlorale.Models.Fleur", b =>
                {
                    b.HasOne("WpfGestionBoutiqueFlorale.Models.Bouquet", "Bouquet")
                        .WithMany("Fleurs")
                        .HasForeignKey("BouquetIdBouquet");

                    b.HasOne("WpfGestionBoutiqueFlorale.Models.Commande", "Commande")
                        .WithMany("Fleurs")
                        .HasForeignKey("IdCommande")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.Navigation("Bouquet");

                    b.Navigation("Commande");
                });

            modelBuilder.Entity("WpfGestionBoutiqueFlorale.Models.Bouquet", b =>
                {
                    b.Navigation("Fleurs");
                });

            modelBuilder.Entity("WpfGestionBoutiqueFlorale.Models.Commande", b =>
                {
                    b.Navigation("Bouquets");

                    b.Navigation("Fleurs");
                });
#pragma warning restore 612, 618
        }
    }
}
